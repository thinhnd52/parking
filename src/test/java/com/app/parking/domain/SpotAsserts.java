package com.app.parking.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SpotAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpotAllPropertiesEquals(Spot expected, Spot actual) {
        assertSpotAutoGeneratedPropertiesEquals(expected, actual);
        assertSpotAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpotAllUpdatablePropertiesEquals(Spot expected, Spot actual) {
        assertSpotUpdatableFieldsEquals(expected, actual);
        assertSpotUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpotAutoGeneratedPropertiesEquals(Spot expected, Spot actual) {
        assertThat(expected)
            .as("Verify Spot auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpotUpdatableFieldsEquals(Spot expected, Spot actual) {
        assertThat(expected)
            .as("Verify Spot relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getSpotNo()).as("check spotNo").isEqualTo(actual.getSpotNo()))
            .satisfies(e -> assertThat(e.getLevel()).as("check level").isEqualTo(actual.getLevel()))
            .satisfies(e -> assertThat(e.getSpotRow()).as("check spotRow").isEqualTo(actual.getSpotRow()))
            .satisfies(e -> assertThat(e.getSpotColumn()).as("check spotColumn").isEqualTo(actual.getSpotColumn()))
            .satisfies(e -> assertThat(e.getOccupied()).as("check occupied").isEqualTo(actual.getOccupied()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSpotUpdatableRelationshipsEquals(Spot expected, Spot actual) {
        // empty method
    }
}
